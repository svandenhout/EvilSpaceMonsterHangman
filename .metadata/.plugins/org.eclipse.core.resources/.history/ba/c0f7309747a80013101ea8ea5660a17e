/*
 * HiScoreAcivity
 * retrieves the hiscores from the hiScoreServer & shows them on screen
 */

package nl.mprog.evilspacemonsterhangman;

import java.net.MalformedURLException;
import java.net.URL;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import nl.mprog.evilspacemonsterhangman.models.HiScores;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.os.AsyncTask;
import android.util.Log;
import android.widget.ArrayAdapter;
import android.widget.ListView;

public class HiScoreActivity extends Activity {
	private Context context = this;
	private URL getURL;
	private JSONArray hiScoreList;
	private ListView hiScoreView;
	
	public void onCreate() {
		try {
        	getURL = new URL("http://10.0.2.2:3000/hiscores.json");
        }catch(MalformedURLException e) {
        	e.printStackTrace();
        }
		
		hiScoreView = (ListView) findViewById(R.id.hi_score_list);
		ArrayAdapter<String> adapter = new ArrayAdapter<String>(
			context, R.layout.simple_list_item_1
		);
		
		hiScoreList = HiScores.getHiScores(getURL);
		try {
			for(int i = 0; i < hiScoreList.length(); i++) {
				JSONObject hiScore = (JSONObject) hiScoreList.get(i);
				String user = (String) hiScore.get("user");
				// String score = (String) hiScore.get("score");
				
				Log.d("hiscores", user);
				adapter.add(user);
			}
		}catch(JSONException e) {
			e.printStackTrace();
		}
		
		// TODO: IMPOSSIBRUUUU
		hiScoreView.setAdapter(adapter);
		
		
		Log.d("hiscores", "oncreate");
		AsyncTask<Void, Void, Void> asyncTask =
				new AsyncTask<Void, Void, Void>() {

			ProgressDialog pd;

            @Override
            protected void onPreExecute() {
            	Log.d("hiscores", "onpreexecute");
                pd = new ProgressDialog(context);
                pd.setTitle("Processing...");
                pd.setMessage("Please wait.");
                pd.setCancelable(false);
                pd.setIndeterminate(true);
                pd.show();
                
                
            }
			
			@Override
			protected Void doInBackground(Void... params) {
				
				
				
				return null;
			}
			
			@Override
			protected void onPostExecute(Void params) {
				hiScoreView.refreshDrawableState();
			}
		};
		asyncTask.execute((Void[]) null);
	}
}
