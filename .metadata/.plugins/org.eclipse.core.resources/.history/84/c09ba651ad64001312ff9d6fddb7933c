package nl.mprog.evilspacemonsterhangman.models.spacemonster;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Random;
import java.util.List;
import java.util.Set;

public class SpaceMonster {
	private final static int monsterSize = 6;
	
	private Random generator = new Random();
	private char[] _chosenLetters;
    private Set<Character> _availableLetters;
	
	// constructor 
	public SpaceMonster() {
		initSet();
		_chosenLetters = new char[monsterSize];
	}
	
	// random the _chosenletters
	// TODO: make sure there are no equal letters and used letters are not displayed
	// split into 2 char[], an allready used and a usable char list. these will
	// exchange every loop
	
	// dus ArrayList<int> availableLetters
	// this method might have to leave
	public char[] randomArray(String usedLetters) {
		Set<Character> workSet = _availableLetters;
		for(char c : _chosenLetters) {
			int i = generator.nextInt();
			c = availableLetters.get(i);
			availableLetters.remove(i);
		}
	}
	
	
	// adds a char to a random spot of the _chosenletters[char]
	public void addLetter(char c) {
		_chosenLetters[generator.nextInt(5)] = c;
	}
	
	// removes a letter from _available letters, all of the
	// used letters will be removed
	public void removeLetterFromSet(char c) {
		_availableLetters.remove(c);
	}
	
	// builds a set with the alphabet in it
	private void initSet() {
		_availableLetters = new HashSet<Character>();
		// build list with the alphabet
		for(int i = 97; i < 123; i++) {
			_availableLetters.add((char) i);
		}
	}
}
